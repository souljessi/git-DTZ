let translations  = {
  // Labels
  'Activate the global connect tool' : '激活全部连接池',
  'Append {type}': '添加{type} ',
  'Add Lane above': '上面添加车道',
  'Divide into two Lanes': '分为两车道',
  'Divide into three Lanes': '分为三车道',
  'Add Lane below': '下面添加车道',
  'Append compensation activity': '添加补偿活动',
  'Change type': '改变类型',
  'Connect using Association': '用Association连接',
  'Connect using Sequence/MessageFlow or Association': '用Sequence/MessageFlow或Association连接',
  'Connect using DataInputAssociation': '用DataInputAssociation连接',
  'Remove': '移除',
  'Activate the hand tool': '激活Hand-Tool',
  'Activate the lasso tool': '激活Lasso-Tool',
  'Activate the create/remove space tool': '激活 创建/移除 空间工具',
  'Create expanded SubProcess': '创建扩展子流程',
  'Create IntermediateThrowEvent/BoundaryEvent' : '创建中间抛出事件/边界事件',
  'Create Pool/Participant': '创建池/参与人',
  'Parallel Multi Instance': '平行的多个实例',
  'Sequential Multi Instance': '顺序的多个实例',
  'Loop': '循环',
  'Ad-hoc': '主持',
  'Create {type}': '创建{type} ',
  'Task': '任务',
  'Send Task': '发送任务',
  'Receive Task': '接收任务',
  'User Task': '用户任务',
  'Manual Task': '人工任务',
  'Business Rule Task': '业务规则任务',
  'Service Task': '服务任务',
  'Script Task': '脚本任务',
  'Call Activity': 'Aufruf-Aktivität',
  'Sub Process (collapsed)': 'Zugeklappter Prozess',
  'Start Event': '开始事件',
  'Intermediate Throw Event': '中间捕获事件',
  'End Event': '减速事件',
  'Message Start Event': '消息开始事件',
  'Timer Start Event': '定时开始事件',
  'Conditional Start Event': '条件开始事件',
  'Signal Start Event': '信号开始事件',
  'Error Start Event': '错误开始事件',
  'Escalation Start Event': 'Eskalations-Startereignis',
  'Compensation Start Event': '补偿开始事件',
  'Message Start Event (non-interrupting)': 'Nachrichten-Startereignis (nicht unterbrechend)',
  'Timer Start Event (non-interrupting)': 'Zeit-Startereignis (nicht unterbrechend)',
  'Conditional Start Event (non-interrupting)': 'Bedingtes Startereignis (nicht unterbrechend)',
  'Signal Start Event (non-interrupting)': 'Signal-Startereignis (nicht unterbrechend)',
  'Escalation Start Event (non-interrupting)': 'Eskalations-Startereignis (nicht unterbrechend)',
  'Message Intermediate Catch Event': 'Eintretendes Nachrichten-Zwischenereignis',
  'Message Intermediate Throw Event': 'Ausgelöstes Nachrichten-Zwischenereignis',
  'Timer Intermediate Catch Event': 'Eintretendes Zeit-Zwischenereignis',
  'Escalation Intermediate Throw Event': 'Ausgelöstes Eskalations-Zwischenereignis',
  'Conditional Intermediate Catch Event': 'Eintretendes bedingtes Zwischenereignis',
  'Link Intermediate Catch Event': 'Eintretendes Link-Zwischenereignis',
  'Link Intermediate Throw Event': 'Ausgelöstes Link-Zwischenereignis',
  'Compensation Intermediate Throw Event': 'Ausgelöstes Kompensations-Zwischenereignis',
  'Signal Intermediate Catch Event': 'Eintretendes Signal-Zwischenereignis',
  'Signal Intermediate Throw Event': 'Ausgelöstes Signal-Zwischenereignis',
  'Message End Event': 'Nachrichten-Endereignis',
  'Escalation End Event': 'Eskalations-Endereignis',
  'Error End Event': 'Fehler-Endereignis',
  'Cancel End Event': 'Abbruchs-Endereignis',
  'Compensation End Event': 'Kompensations-Endereignis',
  'Signal End Event': 'Signal-Endereignis',
  'Terminate End Event': 'Terminierungs-Endereignis',
  'Message Boundary Event': 'Angeheftetes Nachrichten-Zwischenereignis',
  'Message Boundary Event (non-interrupting)': 'Angeheftetes Nachrichten-Zwischenereignis (nicht unterbrechend)',
  'Timer Boundary Event': 'Angeheftetes Zeit-Zwischenereignis',
  'Timer Boundary Event (non-interrupting)': 'Angeheftetes Zeit-Zwischenereignis (nicht unterbrechend)',
  'Escalation Boundary Event': 'Angeheftetes Eskalations-Zwischenereignis',
  'Escalation Boundary Event (non-interrupting)': 'Angeheftetes Eskalations-Zwischenereignis (nicht unterbrechend)',
  'Conditional Boundary Event': 'Angeheftetes bedingtes Zwischenereignis',
  'Conditional Boundary Event (non-interrupting)': 'Angeheftetes bedingtes Zwischenereignis (nicht unterbrechend)',
  'Error Boundary Event': 'Angeheftetes Fehler-Zwischenereignis',
  'Cancel Boundary Event': 'Angeheftetes Abbruch-Zwischenereignis',
  'Signal Boundary Event': 'Angeheftetes Signal-Zwischenereignis',
  'Signal Boundary Event (non-interrupting)': 'Angeheftetes Signal-Zwischenereignis (nicht unterbrechend)',
  'Compensation Boundary Event': 'Angeheftetes Kompensations-Zwischenereignis',
  'Exclusive Gateway': '排他网关',
  'Parallel Gateway': '并行网关',
  'Inclusive Gateway': '包含网关',
  'Complex Gateway': 'Komplexes Gateway',
  'Event based Gateway': '基于事件网关',
  'Transaction': '事务',
  'Sub Process': '子流程',
  'Event Sub Process': '事件子流程',
  'Collapsed Pool': 'Zugeklappter Pool',
  'Expanded Pool': 'Ausgeklappter Pool',

  // Errors
  'no parent for {element} in {parent}': ' {element} 没有父级 {parent}',
  'no shape type specified': '没有指定的形状类型',
  'flow elements must be children of pools/participants': '流元素必须是 Pools/participants的子级',
  'out of bounds release': '释放超过的边界',
  'more than {count} child lanes': '超过{count} 子车道',
  'element required': '所需的元素',
  'diagram not part of bpmn:Definitions': '图不是bpmn定义的部分',
  'no diagram to display': 'kein Prozessmodell',
  'no process or collaboration to display': '没有流程和协作来显示',
  'element {element} referenced by {referenced}#{property} not yet drawn': '不能画元素{element} 引用的{referenced}#{property}',
  'already rendered {element}': '{element}已存在',
  'failed to import {element}': '{element} 导入失败'
};
module.exports = function customTranslate(template, replacements) {
  replacements = replacements || {};

  // Translate
  template = translations[template] || template;

  // Replace
  return template.replace(/{([^}]+)}/g, function(_, key) {
    return replacements[key] || '{' + key + '}';
  });
};
